{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbrown/Desktop/Education/MIT/MERN Stack/Week 13/build-a-formik-form/build-a-formik-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      if (values.email && values.password) {\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (emailRegex.test(values.email)) {\n          alert(\"Login Successful\");\n        } else {\n          document.getElementById(\"emailError\").innerHTML = \"Username should be an email\";\n        }\n      } else {\n        if (!values.email) {\n          document.getElementById(\"emailError\").innerHTML = \"Field required\";\n        }\n        if (!values.password) {\n          document.getElementById(\"pswError\").innerHTML = \"Field required\";\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"isolate -space-y-px rounded-md shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"emailField\",\n      className: \"block text-sm font-medium text-gray-700\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-1\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email,\n        className: \"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailError\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pswField\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"pswField\",\n      name: \"password\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      value: formik.values.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pswError\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submitBtn\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","values","emailRegex","test","alert","document","getElementById","innerHTML","handleSubmit","handleChange"],"sources":["/Users/aaronbrown/Desktop/Education/MIT/MERN Stack/Week 13/build-a-formik-form/build-a-formik-form/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport './index.css';\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      if (values.email && values.password) {\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (emailRegex.test(values.email)) {\n          alert(\"Login Successful\");\n        } else {\n          document.getElementById(\"emailError\").innerHTML = \"Username should be an email\";\n        }\n      } else {\n        if (!values.email) {\n          document.getElementById(\"emailError\").innerHTML = \"Field required\";\n        }\n        if (!values.password) {\n          document.getElementById(\"pswError\").innerHTML = \"Field required\";\n        }\n      }\n    },\n  });\n\n  return (\n      <form onSubmit={formik.handleSubmit} className=\"isolate -space-y-px rounded-md shadow-sm\">\n        <label htmlFor=\"emailField\" className=\"block text-sm font-medium text-gray-700\">Email:</label>\n        <div className=\"mt-1\">\n          <input\n            id=\"emailField\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n          />\n        </div>\n        <div id=\"emailError\"></div>\n        <br />\n        <label htmlFor=\"pswField\">Password:</label>\n        <input\n          id=\"pswField\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <div id=\"pswError\"></div>\n        <br />\n        <button id=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,aAAa;AAAC;AAErB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAGC,MAAM,IAAK;MACpB,IAAIA,MAAM,CAACH,KAAK,IAAIG,MAAM,CAACF,QAAQ,EAAE;QACnC,MAAMG,UAAU,GAAG,uJAAuJ;QAC1K,IAAIA,UAAU,CAACC,IAAI,CAACF,MAAM,CAACH,KAAK,CAAC,EAAE;UACjCM,KAAK,CAAC,kBAAkB,CAAC;QAC3B,CAAC,MAAM;UACLC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,GAAG,6BAA6B;QACjF;MACF,CAAC,MAAM;QACL,IAAI,CAACN,MAAM,CAACH,KAAK,EAAE;UACjBO,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,GAAG,gBAAgB;QACpE;QACA,IAAI,CAACN,MAAM,CAACF,QAAQ,EAAE;UACpBM,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAG,gBAAgB;QAClE;MACF;IACF;EACF,CAAC,CAAC;EAEF,oBACI;IAAM,QAAQ,EAAEX,MAAM,CAACY,YAAa;IAAC,SAAS,EAAC,0CAA0C;IAAA,wBACvF;MAAO,OAAO,EAAC,YAAY;MAAC,SAAS,EAAC,yCAAyC;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC9F;MAAK,SAAS,EAAC,MAAM;MAAA,uBACnB;QACE,EAAE,EAAC,YAAY;QACf,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAEZ,MAAM,CAACa,YAAa;QAC9B,KAAK,EAAEb,MAAM,CAACK,MAAM,CAACH,KAAM;QAC3B,SAAS,EAAC;MAA4G;QAAA;QAAA;QAAA;MAAA;IACtH;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,EAAE,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAO,eAC3B;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,OAAO,EAAC,UAAU;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC3C;MACE,EAAE,EAAC,UAAU;MACb,IAAI,EAAC,UAAU;MACf,IAAI,EAAC,UAAU;MACf,QAAQ,EAAEF,MAAM,CAACa,YAAa;MAC9B,KAAK,EAAEb,MAAM,CAACK,MAAM,CAACF;IAAS;MAAA;MAAA;MAAA;IAAA,QAC9B,eACF;MAAK,EAAE,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAO,eACzB;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,EAAE,EAAC,WAAW;MAAC,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEb;AAAC,GArDQJ,GAAG;EAAA,QACKD,SAAS;AAAA;AAAA,KADjBC,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}